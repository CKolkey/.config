[ -r /etc/lsb-release ] && . /etc/lsb-release

if [ -z "$DISTRIB_DESCRIPTION" ] && [ -x /usr/bin/lsb_release ]; then
	# Fall back to using the very slow lsb_release utility
	DISTRIB_DESCRIPTION=$(lsb_release -s -d)
fi

# http://www.patorjk.com/software/taag/#p=display&h=1&v=0&f=Calvin%20S&t=fuck%20bitches%20get%20money%0A
echo
printf "  ┌─┐┬ ┬┌─┐┬┌─  ┌┐ ┬┌┬┐┌─┐┬ ┬┌─┐┌─┐  ┌─┐┌─┐┌┬┐  ┌┬┐┌─┐┌┐┌┌─┐┬ ┬\n"
printf "  ├┤ │ ││  ├┴┐  ├┴┐│ │ │  ├─┤├┤ └─┐  │ ┬├┤  │   ││││ ││││├┤ └┬┘\n"
printf "  └  └─┘└─┘┴ ┴  └─┘┴ ┴ └─┘┴ ┴└─┘└─┘  └─┘└─┘ ┴   ┴ ┴└─┘┘└┘└─┘ ┴ \n"
echo
printf "  %s (%s %s %s)\n" "$DISTRIB_DESCRIPTION" "$(uname -o)" "$(uname -r)" "$(uname -m)"

cores=$(grep -c ^processor /proc/cpuinfo 2>/dev/null)
[ "$cores" -eq "0" ] && cores=1
threshold="${cores:-1}.0"
if [ $(echo "`cut -f1 -d ' ' /proc/loadavg` < $threshold" | bc) -eq 1 ]; then
    echo
    /usr/bin/landscape-sysinfo
else
    echo
    echo "  System information disabled due to load higher than $threshold"
fi
